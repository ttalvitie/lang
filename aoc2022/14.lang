@Pos.x = [pos]{ pos + 0 };
@Pos.y = [pos]{ pos + 4 };
@Pos.sizeof = 8;

@paths = Vector.init(4);

@minX = 500;
@maxX = 500;
@maxY = 0;

runWhileTrue({
    @line = inputLine();
    ifElse0(get8(line), {
        @path = Vector.init(Pos.sizeof);

        runWhileTrue({
            @x = 0;
            @y = 0;
            @remainder = 0;
            @continue = ifElse(tryParseStr(line, "%u,%u -> %s", &x, &y, &remainder), {
                line = remainder;
                1
            }, {
                parseStr(line, "%u,%u", &x, &y);
                0
            });

            minX = min(minX, x);
            maxX = max(maxX, x);
            maxY = max(maxY, y);

            @pos = Vector.push(path);
            *Pos.x(pos) = x;
            *Pos.y(pos) = y;

            continue
        });

        *Vector.push(paths) = path;
        1
    })
});

@midX = 500;

maxY = maxY + 2;

assert(minX >= 3);
assert(midX >= maxY + 2);

minX = min(minX - 2, midX - maxY - 2);
maxX = max(maxX + 2, midX + maxY + 2);

@w = maxX - minX + 1;
@h = maxY + 1;

@worldBuf = Vector.init(4);
forRange(0, w * h, [i]{
    *Vector.push(worldBuf) = 0
});

@world = [x, y]{
    assert(minX <= x <= maxX);
    assert(y <= maxY);

    Vector.item(worldBuf, y * w + (x - minX))
};

forRange(0, Vector.size(paths), [i]{
    @path = *Vector.item(paths, i);
    @x = 0;
    @y = 0;
    forRange(0, Vector.size(path), [j]{
        @pos = Vector.item(path, j);
        @tx = *Pos.x(pos);
        @ty = *Pos.y(pos);
        ifElse(j == 0, {
            x = tx;
            y = ty;
            *world(x, y) = 1
        }, {
            while({ x < tx }, { x = x + 1; *world(x, y) = 1 });
            while({ x > tx }, { x = x - 1; *world(x, y) = 1 });
            while({ y < ty }, { y = y + 1; *world(x, y) = 1 });
            while({ y > ty }, { y = y - 1; *world(x, y) = 1 })
        })
    })
});

@simulate = {
    @ret = 0 - 1;
    runWhileTrue({
        @x = midX;
        @y = 0;
        @done = 0;
        runWhileTrue({
            ifChain(
                { *world(x, y) != 0 }, {
                    done = 1;
                    0
                },
                { y == maxY }, {
                    done = 1;
                    0
                },
                { *world(x, y + 1) == 0 }, {
                    y = y + 1;
                    1
                },
                { *world(x - 1, y + 1) == 0 }, {
                    x = x - 1;
                    y = y + 1;
                    1
                },
                { *world(x + 1, y + 1) == 0 }, {
                    x = x + 1;
                    y = y + 1;
                    1
                },
                {
                    *world(x, y) = 2;
                    0
                }
            )
        });
        ret = ret + 1;
        !done
    });
    ret
};

printL("%u", simulate());

forRange(0, maxY + 1, [y]{
    forRange(minX, maxX + 1, [x]{
        if(*world(x, y) >= 2, {
            *world(x, y) = 0
        });
        if(y == maxY, {
            *world(x, y) = 1
        })
    })
});

printL("%u", simulate());

0
